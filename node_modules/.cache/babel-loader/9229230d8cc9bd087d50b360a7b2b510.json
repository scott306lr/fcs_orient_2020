{"remainingRequest":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue","mtime":1619201050795},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HintDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <a> {{ group_id }} </a>\n    <b-card\n      bg-variant=\"dark\"\n      text-variant=\"white\"\n      style=\"max-width: 30rem\"\n      class=\"mb-1\"\n    >\n      <b-card-img-lazy :src=\"id + '.jpg'\" alt=\"Image\" bottom></b-card-img-lazy>\n\n      <b-card-body>\n        <b-card-title>{{ hint.name }}</b-card-title>\n        <b-card-sub-title class=\"mb-2\">{{ hint.difficulty }}</b-card-sub-title>\n        <b-card-text>{{ hint.text }}</b-card-text>\n\n        <b-collapse id=\"collapse_upload\" v-model=\"uploadmode\" class=\"mt-2\">\n          <b-form-file accept=\"image/*\" v-model=\"file\"></b-form-file>\n          <b-button @click=\"uploadImage()\">確認</b-button>\n        </b-collapse>\n\n        <b-collapse id=\"collapse_input\" v-model=\"inputmode\" class=\"mt-2\">\n          <b-input-group>\n            <b-form-input\n              v-model=\"input_text\"\n              placeholder=\"請輸入答案\"\n            ></b-form-input>\n\n            <template #append>\n              <b-button @click=\"checkAnswer(input_text)\">確認</b-button>\n            </template>\n          </b-input-group>\n        </b-collapse>\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<!-- The core Firebase JS SDK is always required and must be listed first -->\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-app.js\"></script>\n\n<!-- TODO: Add SDKs for Firebase products that you want to use\n    https://firebase.google.com/docs/web/setup#available-libraries -->\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-analytics.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-storage.js\"></script>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nexport default {\n  props: {\n    id: Number,\n    status: String,\n  },\n  computed: {},\n  mounted() {\n    this.fetchHint();\n    this.fetchHints();\n    this.fetchGroup();\n  },\n  created() {\n    this.group_id = this.$route.query.group;\n    //this.fetchData();\n  },\n  data() {\n    return {\n      hint: JSON,\n      hints: [],\n      group: JSON,\n      input_text: \"\",\n      uploadmode: false,\n      inputmode: false,\n      file: null,\n    };\n  },\n  methods: {\n    async logging(gid, hid, curScore, addScore) {\n      var date = new Date();\n      var hhmmss =\n          date.getHours().toString().padStart(2, \"0\") + \":\" +\n          date.getMinutes().toString().padStart(2, \"0\") + \":\" +\n          date.getSeconds().toString().padStart(2, \"0\");\n\n      await this.axios\n        .post(\"/backend/logging/\", {\n          group_id: gid,\n          fin_hint_id: hid,\n          fin_time: hhmmss,\n          cur_score: curScore,\n          get_score: addScore,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n    },\n\n    async fetchHint() {\n      const val_hint = await this.axios\n        .get(\"/backend/hint/\" + this.id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      //console.log(val_hint);\n      if (val_hint.hint_choices === 3) {\n        this.uploadmode = true;\n      } else {\n        this.inputmode = true;\n      }\n      this.hint = val_hint;\n    },\n\n    async fetchHints() {\n      const val_hints = await this.axios\n        .get(\"/backend/groupsinfo/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      \n      this.hints = val_hints.hints;\n    },\n\n    async fetchGroup() {\n      const val_group = await this.axios\n        .get(\"/backend/groups/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.group = val_group;\n    },\n\n    async hint_set_done(hint_id) {\n      await this.axios\n        .patch(\"/backend/hints/\" + hint_id + \"/\", {\n          done: \"yes\",\n          done_by: this.group_id,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n      console.log(\"hint \" + hint_id + \" set done.\");\n    },\n\n    async add_score() {\n      await this.axios\n        .patch(\"/backend/groups/\" + this.group_id.toString() + \"/\", {\n          score: this.group.score,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n      console.log(\"add score.\");\n    },\n\n    async open_hints() {\n      var locked = [];\n      for (var i = 0; i < this.hints.length; ++i) {\n        if (this.hints[i].avail === \"no\") {\n          locked.append(i);\n        }\n      }\n\n      var cnt = Math.min(3, locked.length);\n      while (cnt > 0) {\n        var i = Math.floor(Math.random() * locked.length);\n        this.hints[i].avail = \"yes\";\n        locked.splice(i, 1);\n\n        await this.axios\n          .patch(\"/backend/hints/\" + this.hints[i].id.toString() + \"/\", {\n            avail: this.hints[i].avail,\n          })\n          .then(function (response) {\n            return response.data;\n          });\n        cnt -= 1;\n        console.log(\"unlocked hint \" + i);\n      }\n    },\n\n    async checkAnswer(ans) {\n      if (ans === this.hint[\"answer\"]) {\n        // Show celebrations ??\n        alert(\"輸入正確！\");\n        for (var i = 0; i < this.hints.length; ++i) {\n          if (\n            this.hints[i].hint_id === this.hint.id &&\n            this.hints[i].done === \"no\"\n          ) {\n            this.hints[i].done = \"yes\";\n            this.hint_set_done(this.hints[i].hint_id);\n            \n            this.group.score += this.hint.basic_score;\n            this.add_score();\n\n            this.open_hints();\n\n            await this.logging(\n              this.group_id, \n              this.hint.id, \n              this.group.score, \n              this.hint.basic_score\n            );\n\n            this.fetchHints();\n            this.fetchGroup();\n            break;\n          }\n        }\n      } else {\n        alert(\"輸入錯誤！\");\n      }\n    },\n\n    async uploadImage() {\n      if (this.file == null) {\n        alert(\"請上傳照片！\");\n        return;\n      }\n\n      if (this.file != null) {\n        var firebaseConfig = {\n          apiKey: \"AIzaSyDFopyMEVt8O0MTX4Mpzd7YGBCHyJL2aZ4\",\n          authDomain: \"fcsorient2021.firebaseapp.com\",\n          projectId: \"fcsorient2021\",\n          storageBucket: \"fcsorient2021.appspot.com\",\n          messagingSenderId: \"815641252619\",\n          appId: \"1:815641252619:web:d795676ec96f145774c80e\",\n          measurementId: \"G-XK9K1NYGS3\",\n        };\n        // Initialize Firebase\n        if (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\n\n        firebase.analytics();\n        var date = new Date();\n        var hhmmss =\n          date.getHours().toString().padStart(2, \"0\") + \"-\" +\n          date.getMinutes().toString().padStart(2, \"0\") + \"-\" +\n          date.getSeconds().toString().padStart(2, \"0\");\n        var re = /(?:\\.([^.]+))?$/;\n        var ext = re.exec(this.file[\"name\"])[1];\n        var filename = `group${\"\" + this.group_id}_hint${\n          \"\" + this.id.toString().padStart(2, \"0\")\n        }_${hhmmss}.${ext}`;\n        console.log(filename);\n\n        var imageRef = firebase.storage().ref().child(filename);\n        imageRef.put(this.file).then((snapshot) => {\n          console.log(\"Image Uploaded!\");\n        });\n        alert(\"上傳完成！\");\n\n        this.fetchHints();\n        this.fetchGroup();\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components"}]}