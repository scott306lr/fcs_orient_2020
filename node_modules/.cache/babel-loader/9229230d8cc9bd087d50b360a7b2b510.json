{"remainingRequest":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue","mtime":1619364611975},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HintDetails.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <b-card\n      bg-variant=\"dark\"\n      text-variant=\"white\"\n      style=\"max-width: 30rem\"\n      class=\"mb-1\"\n    >\n      <b-card-img-lazy\n        :src=\"'./Hint_Images/' + hint_id + '.jpg'\"\n        alt=\"Image\"\n        bottom\n      ></b-card-img-lazy>\n\n      <b-card-body>\n        <b-card-title>{{ hint.name }}</b-card-title>\n        <b-card-sub-title class=\"mb-2\"\n          >題目難易度：{{ hint.difficulty }}</b-card-sub-title\n        >\n        <b-card-sub-title class=\"mb-2\"\n          >題目分數：{{ hint.basic_score }}分</b-card-sub-title\n        >\n\n        <b-card-text v-html=\"hint.text\"></b-card-text>\n\n        <b-collapse id=\"collapse_upload\" v-model=\"uploadmode\" class=\"mt-2\">\n          <b-form-file accept=\"image/*\" v-model=\"file\"></b-form-file>\n          <b-button @click=\"uploadImage()\">確認</b-button>\n        </b-collapse>\n\n        <b-collapse id=\"collapse_input\" v-model=\"inputmode\" class=\"mt-2\">\n          <b-input-group>\n            <b-form-input\n              v-model=\"input_text\"\n              placeholder=\"請輸入答案\"\n            ></b-form-input>\n\n            <template #append>\n              <b-button @click=\"checkAnswer(input_text)\">確認</b-button>\n            </template>\n          </b-input-group>\n        </b-collapse>\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<!-- The core Firebase JS SDK is always required and must be listed first -->\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-app.js\"></script>\n\n<!-- TODO: Add SDKs for Firebase products that you want to use\n    https://firebase.google.com/docs/web/setup#available-libraries -->\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-analytics.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/8.4.1/firebase-storage.js\"></script>\n\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/analytics\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nexport default {\n  props: {\n    id: Number,\n    hint_id: Number,\n    status: String,\n  },\n  computed: {},\n  mounted() {\n    this.fetchHint();\n    this.fetchHints();\n    this.fetchGroup();\n  },\n  created() {\n    this.group_id = this.$route.query.group;\n    //this.fetchData();\n  },\n  data() {\n    return {\n      hint: JSON,\n      hints: [],\n      group: JSON,\n      input_text: \"\",\n      uploadmode: false,\n      inputmode: false,\n      file: null,\n    };\n  },\n  methods: {\n    async logging(gid, reason, curScore, addScore) {\n      var date = new Date();\n      var hhmmss =\n        date.getHours().toString().padStart(2, \"0\") +\n        \":\" +\n        date.getMinutes().toString().padStart(2, \"0\") +\n        \":\" +\n        date.getSeconds().toString().padStart(2, \"0\");\n\n      await this.axios\n        .post(\"/backend/logging/\", {\n          group_id: gid,\n          reason: reason,\n          fin_time: hhmmss,\n          cur_score: curScore,\n          get_score: addScore,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n    },\n\n    async fetchHint() {\n      const val_hint = await this.axios\n        .get(\"/backend/hint/\" + this.hint_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      //console.log(val_hint);\n      if (val_hint.hint_choices === 3) {\n        this.uploadmode = true;\n      } else {\n        this.inputmode = true;\n      }\n      this.hint = val_hint;\n    },\n\n    async fetchHints() {\n      const val_hints = await this.axios\n        .get(\"/backend/groupsinfo/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.hints = val_hints.hints;\n    },\n\n    async fetchGroup() {\n      const val_group = await this.axios\n        .get(\"/backend/groups/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.group = val_group;\n    },\n\n    async hint_set_done(hid) {\n      await this.axios\n        .patch(\"/backend/hints/\" + hid + \"/\", {\n          done: \"yes\",\n          done_by: this.group_id,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n      console.log(\"id \" + hid + \" set done.\");\n    },\n\n    async add_score(score) {\n      const val_group = await this.axios\n        .get(\"/backend/groups/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.group = val_group;\n\n      this.group.score += score;\n      await this.axios\n        .patch(\"/backend/groups/\" + this.group_id.toString() + \"/\", {\n          score: this.group.score,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n      console.log(\"add score.\");\n    },\n\n    async open_hints(open_cnt) {\n      var locked = [];\n      for (var i = 0; i < this.hints.length; ++i) {\n        if (this.hints[i].avail === \"no\") {\n          locked.push(i);\n        }\n      }\n\n      var cnt = Math.min(open_cnt, locked.length);\n      while (cnt > 0) {\n        var i = Math.floor(Math.random() * locked.length);\n        var did = locked[i];\n        this.hints[did].avail = \"yes\";\n        locked.splice(i, 1);\n\n        await this.axios\n          .patch(\"/backend/hints/\" + this.hints[did].id + \"/\", {\n            avail: this.hints[did].avail,\n          })\n          .then(function (response) {\n            return response.data;\n          });\n        cnt -= 1;\n        console.log(\"unlocked hint \" + this.hints[did].hint_id);\n      }\n    },\n\n    async checkAnswer(ans) {\n      if (ans === \"\") {\n        alert(\"答案不可為空！\");\n        return;\n      }\n\n      const val_checkhint = await this.axios\n        .get(\"/backend/hints/\" + this.id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n\n      if (val_checkhint.done === \"yes\") {\n        alert(\"題目已完成！\");\n        return;\n      }\n\n      if (confirm(\"確認輸入 \" + ans + \" ?\")) {\n        const val_group = await this.axios\n          .get(\"/backend/groups/\" + this.group_id + \"/\")\n          .then(function (response) {\n            return response.data;\n          });\n        this.group = val_group;\n\n        const val_hints = await this.axios\n          .get(\"/backend/groupsinfo/\" + this.group_id + \"/\")\n          .then(function (response) {\n            return response.data;\n          });\n        this.hints = val_hints.hints;\n\n        if (ans === this.hint[\"answer\"]) {\n          this.hint_set_done(this.id);\n          this.block = await this.add_score(this.hint.basic_score);\n          this.open_hints(2);\n\n          await this.logging(\n            this.group_id,\n            \"id:\" + this.hint_id + \" 完成題目\",\n            this.group.score,\n            this.hint.basic_score\n          );\n\n          this.fetchHints();\n          this.fetchGroup();\n\n          alert(\"輸入正確！\");\n          alert(\"解鎖2題新題目！\");\n        } else {\n          this.block = await this.add_score(-50);\n          await this.logging(\n            this.group_id,\n            \"id:\" + this.hint_id + \" 回答錯誤\",\n            this.group.score,\n            \"-50\"\n          );\n\n          this.fetchHints();\n          this.fetchGroup();\n          alert(\"輸入錯誤！ 扣50分！\");\n        }\n      }\n    },\n\n    async uploadImage() {\n      if (this.file == null) {\n        alert(\"請上傳照片！\");\n        return;\n      }\n\n      if (this.file != null) {\n        var firebaseConfig = {\n          apiKey: \"AIzaSyDFopyMEVt8O0MTX4Mpzd7YGBCHyJL2aZ4\",\n          authDomain: \"fcsorient2021.firebaseapp.com\",\n          projectId: \"fcsorient2021\",\n          storageBucket: \"fcsorient2021.appspot.com\",\n          messagingSenderId: \"815641252619\",\n          appId: \"1:815641252619:web:d795676ec96f145774c80e\",\n          measurementId: \"G-XK9K1NYGS3\",\n        };\n        // Initialize Firebase\n        if (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\n\n        firebase.analytics();\n        var date = new Date();\n        var hhmmss =\n          date.getHours().toString().padStart(2, \"0\") +\n          \"-\" +\n          date.getMinutes().toString().padStart(2, \"0\") +\n          \"-\" +\n          date.getSeconds().toString().padStart(2, \"0\");\n        var re = /(?:\\.([^.]+))?$/;\n        var ext = re.exec(this.file[\"name\"])[1];\n        var filename = `group${\"\" + this.group_id}_hint${\n          \"\" + this.id.toString().padStart(2, \"0\")\n        }_${hhmmss}.${ext}`;\n        console.log(filename);\n\n        var imageRef = firebase.storage().ref().child(filename);\n        imageRef.put(this.file).then((snapshot) => {\n          console.log(\"Image Uploaded!\");\n        });\n        alert(\"上傳完成！ 請等待審查結果！\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components"}]}