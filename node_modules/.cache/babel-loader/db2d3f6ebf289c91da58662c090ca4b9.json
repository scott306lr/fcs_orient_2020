{"remainingRequest":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/src/components/HintDetails.vue","mtime":1618637272279},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lr/coding/javascript/fcs_orient_2021/orient_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HintDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,EAAA,EAAA,MADA;AAEA,IAAA,MAAA,EAAA;AAFA,GADA;AAKA,EAAA,QAAA,EAAA,EALA;AAMA,EAAA,OANA,qBAMA,CAAA,CANA;AAOA,EAAA,OAPA,qBAOA;AACA,SAAA,QAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,KAAA;AACA,SAAA,SAAA;AACA,GAVA;AAWA,EAAA,IAXA,kBAWA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA,IAFA;AAGA,MAAA,KAAA,EAAA,IAHA;AAIA,MAAA,UAAA,EAAA;AAJA,KAAA;AAMA,GAlBA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,KAAA,CACA,GADA,CACA,mBAAA,KAAA,CAAA,EAAA,GAAA,GADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBAJA,CADA;;AAAA;AACA,gBAAA,QADA;AAMA,gBAAA,KAAA,CAAA,IAAA,GAAA,QAAA;AANA;AAAA,uBAOA,KAAA,CAAA,KAAA,CACA,GADA,CACA,yBAAA,KAAA,CAAA,QAAA,GAAA,GADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBAJA,CAPA;;AAAA;AAOA,gBAAA,SAPA;AAYA,gBAAA,KAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AAZA;AAAA,uBAaA,KAAA,CAAA,KAAA,CACA,GADA,CACA,qBAAA,KAAA,CAAA,QAAA,GAAA,GADA,EAEA,IAFA,CAEA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBAJA,CAbA;;AAAA;AAaA,gBAAA,SAbA;AAkBA,gBAAA,KAAA,CAAA,KAAA,GAAA,SAAA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,KApBA;AAsBA,IAAA,aAtBA,yBAsBA,OAtBA,EAsBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,KAAA,CAAA,OAAA,EAAA,IAAA,GAAA,KAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,MAAA,CAAA,KAAA,CAAA,OAAA,CAAA;AAHA;AAAA,uBAKA,MAAA,CAAA,KAAA,CACA,KADA,CACA,yBAAA,MAAA,CAAA,QAAA,GAAA,GADA,EACA;AACA,kBAAA,KAAA,EAAA,MAAA,CAAA;AADA,iBADA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBANA,CALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA,KAlCA;AAoCA,IAAA,SApCA,uBAoCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,KAAA,CAAA,OAAA,KAAA,MAAA,CAAA,IAAA,CAAA,OAAA,CAAA;AADA;AAAA,uBAEA,MAAA,CAAA,KAAA,CACA,KADA,CACA,qBAAA,MAAA,CAAA,QAAA,CAAA,QAAA,EAAA,GAAA,GADA,EACA;AACA,kBAAA,KAAA,EAAA,MAAA,CAAA,KAAA,CAAA;AADA,iBADA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBANA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA,KA7CA;AA+CA,IAAA,UA/CA,wBA+CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,GADA,GACA,CADA;;AAEA,qBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EAAA,EAAA,CAAA,EAAA;AACA,kBAAA,GAAA,IAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,IAAA;AACA;;AACA,gBAAA,IAAA,CAAA,GAAA,CAAA,CAAA,EAAA,GAAA;AACA,gBAAA,CAAA,GAAA,CAAA;;AANA;AAAA,sBAOA,GAAA,GAAA,CAPA;AAAA;AAAA;AAAA;;AAQA,gBAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,IAAA,MAAA,CAAA,KAAA,CAAA,MAAA;;AARA,sBAUA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA,KAAA,IAAA,IAAA,IAAA,CAAA,MAAA,KAAA,GAVA;AAAA;AAAA;AAAA;;AAWA,gBAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,KAAA,GAAA,KAAA;AAXA;AAAA,uBAYA,MAAA,CAAA,KAAA,CACA,KADA,CACA,oBAAA,MAAA,CAAA,QAAA,CAAA,QAAA,EAAA,GAAA,GADA,EACA;AACA,kBAAA,KAAA,EAAA,MAAA,CAAA;AADA,iBADA,EAIA,IAJA,CAIA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA;AACA,iBANA,CAZA;;AAAA;AAmBA,gBAAA,GAAA,IAAA,CAAA;;AAnBA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA,KArEA;AAuEA,IAAA,WAvEA,uBAuEA,GAvEA,EAuEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,GAAA,KAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CADA;AAAA;AAAA;AAAA;;AAEA;AACA,gBAAA,KAAA,CAAA,OAAA,CAAA;AACA,gBAAA,CAJA,GAIA,CAJA;;AAAA;AAAA,sBAIA,CAAA,GAAA,MAAA,CAAA,KAAA,CAAA,MAJA;AAAA;AAAA;AAAA;;AAAA,sBAMA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,EAAA,KAAA,MAAA,CAAA,IAAA,CAAA,EAAA,IACA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,KAAA,IAPA;AAAA;AAAA;AAAA;;AASA,gBAAA,MAAA,CAAA,aAAA,CAAA,CAAA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EAVA,CAWA;AACA;AACA;AACA;;AAdA;;AAAA;AAIA,kBAAA,CAJA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAmBA,gBAAA,KAAA,CAAA,OAAA,CAAA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA;AA5FA;AAnBA,CAAA","sourcesContent":["<template>\n  <div>\n    <a> {{ group_id }} </a>\n    <b-card\n      bg-variant=\"dark\"\n      text-variant=\"white\"\n      style=\"max-width: 30rem\"\n      class=\"mb-1\"\n    >\n      <b-card-img-lazy :src=\"id + '.jpg'\" alt=\"Image\" bottom></b-card-img-lazy>\n\n      <b-card-body>\n        <b-card-title>{{ hint.name }}</b-card-title>\n        <b-card-sub-title class=\"mb-2\">{{ hint.difficulty }}</b-card-sub-title>\n        <b-card-text>{{ hint.text }}</b-card-text>\n\n        <b-input-group>\n          <b-form-input\n            v-model=\"input_text\"\n            placeholder=\"請輸入答案\"\n          ></b-form-input>\n\n          <template #append>\n            <b-button @click=\"checkAnswer(input_text)\">確認</b-button>\n          </template>\n        </b-input-group>\n      </b-card-body>\n    </b-card>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: {\n    id: Number,\n    status: String,\n  },\n  computed: {},\n  mounted() {},\n  created() {\n    this.group_id = this.$route.query.group;\n    this.fetchData();\n  },\n  data() {\n    return {\n      hint: JSON,\n      hints: JSON,\n      group: JSON,\n      input_text: \"\",\n    };\n  },\n  methods: {\n    async fetchData() {\n      const val_hint = await this.axios\n        .get(\"/backend/hint/\" + this.id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.hint = val_hint;\n      const val_hints = await this.axios\n        .get(\"/backend/groupsinfo/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.hints = val_hints.hints;\n      const val_group = await this.axios\n        .get(\"/backend/groups/\" + this.group_id + \"/\")\n        .then(function (response) {\n          return response.data;\n        });\n      this.group = val_group;\n    },\n\n    async hint_set_done(hint_id) {\n      this.hints[hint_id].done = \"yes\";\n      console.log(hint_id);\n      console.log(this.hints[hint_id]);\n\n      await this.axios\n        .patch(\"/backend/groupsinfo/\" + this.group_id + \"/\", {\n          hints: this.hints,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n    },\n\n    async add_score() {\n      this.group[\"score\"] += this.hint[\"score\"];\n      await this.axios\n        .patch(\"/backend/groups/\" + this.group_id.toString() + \"/\", {\n          score: this.group.score,\n        })\n        .then(function (response) {\n          return response.data;\n        });\n    },\n\n    async open_hints() {\n      var cnt = 0;\n      for (var i = 0; i < this.hints.length; ++i) {\n        cnt += this.hints[i].avail === \"no\";\n      }\n      Math.min(3, cnt);\n      i = 0;\n      while (cnt > 0) {\n        i = (i + 1) % this.hints.length;\n\n        if (this.hints[i].avail === \"no\" && Math.random() > 0.7) {\n          this.hints[i].avail = \"yes\";\n          await this.axios\n            .patch(\"/backend/hints/\" + this.group_id.toString() + \"/\", {\n              hints: this.hints,\n            })\n            .then(function (response) {\n              return response.data;\n            });\n          cnt -= 1;\n        }\n      }\n    },\n\n    async checkAnswer(ans) {\n      if (ans === this.hint[\"answer\"]) {\n        // Show celebrations ??\n        alert(\"輸入正確！\");\n        for (var i = 0; i < this.hints.length; ++i) {\n          if (\n            this.hints[i].id === this.hint.id &&\n            this.hints[i].done === \"no\"\n          ) {\n            this.hint_set_done(i);\n            console.log(i);\n            //this.add_score();\n            //console.log(i);\n            //this.open_hints();\n            //console.log(i);\n            break;\n          }\n        }\n      } else {\n        alert(\"輸入錯誤！\");\n      }\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped></style>\n"],"sourceRoot":"src/components"}]}